"use strict";(self.webpackChunkpatchouli_docs=self.webpackChunkpatchouli_docs||[]).push([[682],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return p}});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},g={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},f=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),f=c(n),p=o,d=f["".concat(s,".").concat(p)]||f[p]||g[p]||i;return n?a.createElement(d,r(r({ref:t},u),{},{components:n})):a.createElement(d,r({ref:t},u))}));function p(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,r=new Array(i);r[0]=f;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,r[1]=l;for(var c=2;c<i;c++)r[c]=n[c];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}f.displayName="MDXCreateElement"},9379:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return u},default:function(){return f}});var a=n(7462),o=n(3366),i=(n(7294),n(3905)),r=["components"],l={},s="Gating Content with Config Flags",c={unversionedId:"patchouli-basics/config-gating",id:"patchouli-basics/config-gating",isDocsHomePage:!1,title:"Gating Content with Config Flags",description:"Config Flags are a system that allows content in the book to be dynamically hot swapped",source:"@site/docs/patchouli-basics/config-gating.md",sourceDirName:"patchouli-basics",slug:"/patchouli-basics/config-gating",permalink:"/Patchouli/docs/patchouli-basics/config-gating",editUrl:"https://github.com/VazkiiMods/Patchouli/edit/documentation/docs/patchouli-basics/config-gating.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Gating Content with Advancements",permalink:"/Patchouli/docs/patchouli-basics/advancement-locking"},next:{title:"Giving Books to New Players",permalink:"/Patchouli/docs/patchouli-basics/giving-new"}},u=[{value:"Default Flags",id:"default-flags",children:[]},{value:"Flag Expressions",id:"flag-expressions",children:[]},{value:"Adding your own Flags",id:"adding-your-own-flags",children:[]}],g={toc:u};function f(e){var t=e.components,n=(0,o.Z)(e,r);return(0,i.kt)("wrapper",(0,a.Z)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"gating-content-with-config-flags"},"Gating Content with Config Flags"),(0,i.kt)("p",null,'Config Flags are a system that allows content in the book to be dynamically hot swapped\nbased on configuration and the game environment. In a few places across the book json\nstructures, you\'ll find "flag" tags, which can be filled with a config flag expression.'),(0,i.kt)("p",null,"Flags are boolean values (true or false), and expressions can be a few flags connected to\ncreate a statement based on multiple flags. More often than not, you won't need to write\nan expression, and can just write the flag itself. Should you write the name of a flag\nthat's not defined, it defaults to false."),(0,i.kt)("p",null,"Any content (all the way from category, entry, page, or even template component) will be\ndisabled if it has a flag expression assigned to it, and said expression happens to\nevaluate to false."),(0,i.kt)("h2",{id:"default-flags"},"Default Flags"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"debug"),": Is true when the game is being loaded from an IDE Debug mode"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"advancements_disabled"),': Is true when the "Disable Advancement Locking" option in the\nPatchouli config is true'),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"testing_mode"),': Is true when the "Testing Mode" option in the Patchouli config is true'),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"mod:MODID"),': Is true when the mod MODID is loaded in the game. (e.g. "mod:quark" would\nbe true if Quark is loaded)')),(0,i.kt)("h2",{id:"flag-expressions"},"Flag Expressions"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"!flag"),": Is true when flag is false (negation)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"&flag1,flag2,flag3..."),": Is true when flag1, flag2, flag3... are all true (conjuction)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"|flag2,flag2,flag3..."),": Is true when at least one of flag1, flag2, flag3... is true\n(disjunction)")),(0,i.kt)("h2",{id:"adding-your-own-flags"},"Adding your own Flags"),(0,i.kt)("p",null,"This system is intended for modders more so than mod pack makers, as it allows them to\ndynamically change the book based on their own config needs. This can be accomplished\nthrough hooks in the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/Vazkii/Patchouli/tree/master/src/main/java/vazkii/patchouli/api"},"Patchouli\nAPI"),"."))}f.isMDXComponent=!0}}]);